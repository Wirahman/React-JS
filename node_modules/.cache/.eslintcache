[{"C:\\project\\react\\administrator\\src\\index.js":"1","C:\\project\\react\\administrator\\src\\App.js":"2","C:\\project\\react\\administrator\\src\\About.js":"3","C:\\project\\react\\administrator\\src\\Contact.js":"4","C:\\project\\react\\administrator\\src\\Login\\Login.js":"5","C:\\project\\react\\administrator\\src\\Dashboard\\Dashboard.js":"6","C:\\project\\react\\administrator\\src\\Home\\Home.js":"7","C:\\project\\react\\administrator\\src\\Utils\\Common.js":"8","C:\\project\\react\\administrator\\src\\Utils\\PrivateRoute.js":"9","C:\\project\\react\\administrator\\src\\Utils\\PublicRoute.js":"10","C:\\project\\react\\administrator\\src\\reportWebVitals.js":"11","C:\\project\\react\\administrator\\src\\LoginLama\\LoginLama.js":"12"},{"size":168,"mtime":1683284136306,"results":"13","hashOfConfig":"14"},{"size":2019,"mtime":1684227192298,"results":"15","hashOfConfig":"14"},{"size":208,"mtime":1683280957240,"results":"16","hashOfConfig":"17"},{"size":220,"mtime":1683280914622,"results":"18","hashOfConfig":"17"},{"size":5478,"mtime":1684228667430,"results":"19","hashOfConfig":"14"},{"size":1247,"mtime":1683515772147,"results":"20","hashOfConfig":"14"},{"size":139,"mtime":1683282768442,"results":"21","hashOfConfig":"14"},{"size":1171,"mtime":1683513648519,"results":"22","hashOfConfig":"14"},{"size":441,"mtime":1683283533061,"results":"23","hashOfConfig":"14"},{"size":410,"mtime":1683283522950,"results":"24","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"17"},{"size":3949,"mtime":1684227659257,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lcpejp",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"nigr2o",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"C:\\project\\react\\administrator\\src\\index.js",[],[],"C:\\project\\react\\administrator\\src\\App.js",["67","68"],[],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\n \nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\n\nimport Login from './Login/Login';\nimport LoginLama from './LoginLama/LoginLama';\nimport Dashboard from './Dashboard/Dashboard';\nimport Home from './Home/Home';\n \nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n \n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      return;\n    }\n \n    axios.get(`http://localhost:4000/verifyToken?token=${token}`).then(response => {\n      setUserSession(response.data.token, response.data.user);\n      setAuthLoading(false);\n    }).catch(error => {\n      removeUserSession();\n      setAuthLoading(false);\n    });\n  }, []);\n \n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          <div className=\"header\">\n            <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n            <NavLink activeClassName=\"active\" to=\"/login\">Login</NavLink><small>(Access without token only)</small>\n            <NavLink activeClassName=\"active\" to=\"/loginLama\">Login Lama</NavLink><small>(Access without token only)</small>\n            <NavLink activeClassName=\"active\" to=\"/dashboard\">Dashboard</NavLink><small>(Access with token only)</small>\n          </div>\n          <div className=\"content\">\n            <Routes>\n              <Route exact path=\"/\" element={<Home/>}/>\n              <Route path=\"/login\" element={<Login/>}/>\n              <Route path=\"/loginLama\" element={<LoginLama/>}/>\n              <Route path=\"/dashboard\" element={<Dashboard/>}/>\n            </Routes>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n \nexport default App;",[],"C:\\project\\react\\administrator\\src\\About.js",[],[],[],"C:\\project\\react\\administrator\\src\\Contact.js",[],[],"C:\\project\\react\\administrator\\src\\Login\\Login.js",["69","70"],[],"C:\\project\\react\\administrator\\src\\Dashboard\\Dashboard.js",["71","72","73","74"],[],"C:\\project\\react\\administrator\\src\\Home\\Home.js",[],[],"C:\\project\\react\\administrator\\src\\Utils\\Common.js",[],[],"C:\\project\\react\\administrator\\src\\Utils\\PrivateRoute.js",[],[],"C:\\project\\react\\administrator\\src\\Utils\\PublicRoute.js",[],[],"C:\\project\\react\\administrator\\src\\reportWebVitals.js",[],[],"C:\\project\\react\\administrator\\src\\LoginLama\\LoginLama.js",["75","76","77"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { setUserSession } from '../Utils/Common';\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBCheckbox\r\n}\r\nfrom 'mdb-react-ui-kit';\r\n\r\n \r\nfunction LoginLama(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const username = useFormInput('');\r\n  const password = useFormInput('');\r\n  const [error, setError] = useState(null);\r\n  const headers = {\r\n    headers: { Authorization: 'Bearer 4pb4tech' }\r\n  };\r\n  const ip = 'http://127.0.0.1:8000';\r\n  const url = ip + '/api/user/login';\r\n  // handle button click of login form\r\n  const handleLogin = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    axios.post(url, { username: username.value, password: password.value }, headers).then(response => {\r\n      setLoading(false);\r\n      setUserSession(response.data.token, response.data.user);\r\n      console.log(\"Pasang Session\");\r\n      console.log(\"Response\");\r\n      console.log(response);\r\n      console.log(\"Response Data\");\r\n      console.log(response.data);\r\n      console.log(\"Response Data Username\");\r\n      console.log(response.data.data[0]['username']);\r\n      sessionStorage.setItem(\"pengguna\", response.data.data);\r\n      sessionStorage.setItem(\"username\", response.data.data[0]['username']);\r\n      sessionStorage.setItem(\"userID\", response.data.data[0]['id']);\r\n      sessionStorage.setItem(\"token\", response.data.data[0]['token']);\r\n      sessionStorage.setItem(\"token_expired\", response.data.data[0]['token_expired']);\r\n      sessionStorage.setItem(\"role_id\", response.data.data[0]['role_id']);\r\n      // props.history.push('/dashboard');\r\n      window.location.href = \"/dashboard\";\r\n    }).catch(error => {\r\n      setLoading(false);\r\n      if (error.response.status === 401) setError(error.response.data.message);\r\n      else setError(\"Something went wrong. Please try again later.\");\r\n    });\r\n  }\r\n \r\n  return (\r\n    <MDBContainer fluid className=\"p-3 my-5\">\r\n      <MDBRow>\r\n        <MDBCol col='10' md='6'>\r\n          <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg\" class=\"img-fluid\" alt=\"Phone image\" />\r\n        </MDBCol>\r\n\r\n        <MDBCol col='4' md='6'>\r\n          \r\n          <MDBInput wrapperClass='mb-4' label='Username' id='formControlLg' type='username' size=\"lg\" {...username}/>\r\n          <MDBInput wrapperClass='mb-4' label='Password' id='formControlLg' type='password' size=\"lg\" {...password}/>\r\n          \r\n          <div className=\"d-flex justify-content-between mx-4 mb-4\">\r\n            <MDBCheckbox name='flexCheck' value='' id='flexCheckDefault' label='Remember me' />\r\n            <a href=\"!#\">Forgot password?</a>\r\n          </div>\r\n\r\n          {/* <MDBBtn className=\"mb-4 w-100\" size=\"lg\">Sign in</MDBBtn> */}\r\n          {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\r\n          <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\r\n\r\n          {/* <div className=\"divider d-flex align-items-center my-4\">\r\n            <p className=\"text-center fw-bold mx-3 mb-0\">OR</p>\r\n          </div> */}\r\n\r\n          {/* <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{backgroundColor: '#3b5998'}}>\r\n            <MDBIcon fab icon=\"facebook-f\" className=\"mx-2\"/>\r\n            Continue with facebook\r\n          </MDBBtn>\r\n\r\n          <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{backgroundColor: '#55acee'}}>\r\n            <MDBIcon fab icon=\"twitter\" className=\"mx-2\"/>\r\n            Continue with twitter\r\n          </MDBBtn> */}\r\n\r\n        </MDBCol>\r\n\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nconst useFormInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n \r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  }\r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}\r\n \r\nexport default LoginLama;",{"ruleId":"78","severity":1,"message":"79","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":35,"column":12,"nodeType":"80","messageId":"81","endLine":35,"endColumn":19},{"ruleId":"78","severity":1,"message":"84","line":36,"column":12,"nodeType":"80","messageId":"81","endLine":36,"endColumn":17},{"ruleId":"78","severity":1,"message":"85","line":3,"column":31,"nodeType":"80","messageId":"81","endLine":3,"endColumn":38},{"ruleId":"78","severity":1,"message":"86","line":3,"column":40,"nodeType":"80","messageId":"81","endLine":3,"endColumn":57},{"ruleId":"78","severity":1,"message":"83","line":9,"column":10,"nodeType":"80","messageId":"81","endLine":9,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":11,"column":10,"nodeType":"80","messageId":"81","endLine":11,"endColumn":15},{"ruleId":"78","severity":1,"message":"87","line":8,"column":3,"nodeType":"80","messageId":"81","endLine":8,"endColumn":9},{"ruleId":"78","severity":1,"message":"88","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":59,"column":11,"nodeType":"91","endLine":59,"endColumn":141},"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'PublicRoute' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'getUser' is defined but never used.","'removeUserSession' is defined but never used.","'MDBBtn' is defined but never used.","'MDBIcon' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]